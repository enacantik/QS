Instal modul psycopg2
Pertama, kunjungi paket psycopg2 di sini .

Kedua, gunakan baris perintah berikut dari terminal:

pip install psycopg2
Bahasa kode:  Sesi Shell  ( Shell )
Jika Anda telah mengunduh paket sumber ke komputer Anda, Anda dapat menggunakan setup.py sebagai berikut:

python setup.py build
sudo python setup.py install
Bahasa kode:  Sesi Shell  ( Shell )
Buat database baru
Pertama, masuk ke server database PostgreSQL menggunakan alat klien apa pun seperti pgAdmin atau psql.

Kedua, gunakan pernyataan berikut untuk membuat database baru bernama suppliersdi server database PostgreSQL.

CREATE DATABASE suppliers;
Bahasa kode:  SQL (Structured Query Language)  ( sql )
Hubungkan ke database PostgreSQL menggunakan psycopg2
Untuk terhubung ke suppliersdatabase, Anda menggunakan connect()fungsi psycopg2modul.

Fungsi ini connect()membuat sesi database baru dan mengembalikan instance baru dari connectionkelas. Dengan menggunakan connectionobjek, Anda dapat membuat yang baru cursoruntuk mengeksekusi pernyataan SQL apa pun.

Untuk memanggil connect()fungsi, Anda menentukan parameter database PostgreSQL sebagai string koneksi dan meneruskannya ke fungsi seperti ini:

conn = psycopg2.connect("dbname=suppliers user=postgres password=postgres")
Bahasa kode:  SQL (Structured Query Language)  ( sql )
Atau Anda dapat menggunakan daftar argumen kata kunci:

conn = psycopg2.connect(
    host="localhost",
    database="suppliers",
    user="postgres",
    password="Abcd1234")
Bahasa kode:  Python  ( python )
Berikut ini adalah daftar parameter koneksi:

database: nama database yang ingin Anda hubungkan.
user: nama pengguna yang digunakan untuk mengautentikasi.
password: kata sandi yang digunakan untuk mengautentikasi.
host: alamat server database mis., localhost atau alamat IP.
port: nomor port default ke 5432 jika tidak disediakan.
Untuk membuatnya lebih nyaman, Anda dapat menggunakan file konfigurasi untuk menyimpan semua parameter koneksi.

Berikut tampilan isi database.inifile:

[postgresql]
host=localhost
database=suppliers
user=postgres
password=SecurePas$1
Bahasa kode:  Sesi Shell  ( Shell )
Dengan menggunakan database.ini, Anda dapat mengubah parameter koneksi PostgreSQL saat Anda memindahkan kode ke lingkungan produksi tanpa mengubah kode.

Perhatikan bahwa jika Anda git, Anda perlu menambahkan database.inike .gitignorefile untuk tidak melakukan informasi sensitif ke repo publik seperti github. Filenya .gitignoreakan seperti ini:

database.ini
Bahasa kode:  CSS  ( css )
Fungsi berikut config()membaca database.inifile dan mengembalikan parameter koneksi. Fungsi config()ditempatkan dalam config.pyfile:

#!/usr/bin/python
from configparser import ConfigParser


def config(filename='database.ini', section='postgresql'):
    # create a parser
    parser = ConfigParser()
    # read config file
    parser.read(filename)

    # get section, default to postgresql
    db = {}
    if parser.has_section(section):
        params = parser.items(section)
        for param in params:
            db[param[0]] = param[1]
    else:
        raise Exception('Section {0} not found in the {1} file'.format(section, filename))

    return db
Bahasa kode:  Python  ( python )
Fungsi berikut connect()terhubung ke suppliersdatabase dan mencetak versi database PostgreSQL.

#!/usr/bin/python
import psycopg2
from config import config

def connect():
    """ Connect to the PostgreSQL database server """
    conn = None
    try:
        # read connection parameters
        params = config()

        # connect to the PostgreSQL server
        print('Connecting to the PostgreSQL database...')
        conn = psycopg2.connect(**params)
		
        # create a cursor
        cur = conn.cursor()
        
	# execute a statement
        print('PostgreSQL database version:')
        cur.execute('SELECT version()')

        # display the PostgreSQL database server version
        db_version = cur.fetchone()
        print(db_version)
       
	# close the communication with the PostgreSQL
        cur.close()
    except (Exception, psycopg2.DatabaseError) as error:
        print(error)
    finally:
        if conn is not None:
            conn.close()
            print('Database connection closed.')


if __name__ == '__main__':
    connect()
Bahasa kode:  Python  ( python )
Bagaimana itu bekerja.

Pertama, baca parameter koneksi database dari database.inifile.
Selanjutnya, buat koneksi database baru dengan memanggil connect()fungsi.
Kemudian, buat yang baru cursordan jalankan pernyataan SQL untuk mendapatkan versi database PostgreSQL.
Setelah itu, baca hasil yang ditetapkan dengan memanggil   fetchone()metode objek kursor.
Terakhir, tutup komunikasi dengan server database dengan memanggil close()metode cursordan connectionobjek.
Jalankan file connect.py
Untuk mengeksekusi connect.pyfile, Anda menggunakan perintah berikut:

python connect.py
Bahasa kode:  Sesi Shell  ( Shell )
Anda akan melihat output berikut:

Connecting to the PostgreSQL database...
PostgreSQL database version:
('PostgreSQL 12.3, compiled by Visual C++ build 1914, 64-bit',)
Database connection closed.
Bahasa kode:  Sesi Shell  ( Shell )
Ini berarti Anda telah berhasil terhubung ke server database PostgreSQL.

Penyelesaian masalah
Fungsi connect()memunculkan  DatabaseErrorpengecualian jika terjadi kesalahan. Untuk melihat cara kerjanya, Anda dapat mengubah parameter koneksi dalam database.inifile.

Misalnya, jika Anda mengubah host menjadi  localhosts, program akan menampilkan pesan berikut:

Connecting to the PostgreSQL database...
could not translate host name "localhosts" to address: Unknown host
Bahasa kode:  Sesi Shell  ( Shell )
Berikut ini menampilkan pesan error saat Anda mengubah database ke database yang tidak ada misalnya supplier:

Connecting to the PostgreSQL database...
FATAL: database "supplier" does not exist
Bahasa kode:  Sesi Shell  ( Shell )
Jika Anda mengubah pengguna menjadi   postgress, itu tidak akan berhasil diautentikasi sebagai berikut:

Connecting to the PostgreSQL database...
FATAL: password authentication failed for user "postgress"
Bahasa kode:  Sesi Shell  ( Shell )
Dalam tutorial ini, Anda telah belajar bagaimana menghubungkan ke server database PostgreSQL dari program Python.