Dalam komputasi , database adalah kumpulan terorganisir dari data yang disimpan dan diakses secara elektronik. Basis data kecil dapat disimpan di sistem file , sedangkan basis data besar disimpan di kluster komputer atau penyimpanan cloud . Desain basis data mencakup teknik formal dan pertimbangan praktis, termasuk pemodelan data , representasi dan penyimpanan data yang efisien, bahasa kueri , keamanan dan privasi data sensitif, dan masalah komputasi terdistribusi , termasuk mendukung akses konkuren dantoleransi kesalahan .

Sistem manajemen basis data ( DBMS ) adalah perangkat lunak yang berinteraksi dengan pengguna akhir , aplikasi, dan basis data itu sendiri untuk menangkap dan menganalisis data. Perangkat lunak DBMS juga mencakup fasilitas inti yang disediakan untuk mengelola database. Jumlah total database, DBMS dan aplikasi terkait dapat disebut sebagai sistem database. Seringkali istilah "database" juga digunakan secara longgar untuk merujuk ke salah satu DBMS, sistem database atau aplikasi yang terkait dengan database.

Ilmuwan komputer dapat mengklasifikasikan sistem manajemen basis data menurut model basis data yang mereka dukung. Database relasional menjadi dominan pada 1980-an. Data model ini sebagai baris dan kolom dalam serangkaian tabel , dan sebagian besar menggunakan SQL untuk menulis dan membuat kueri data. Pada tahun 2000-an, database non-relasional menjadi populer, secara kolektif disebut sebagai NoSQL , karena mereka menggunakan bahasa query yang berbeda .

Terminologi dan ikhtisar
Secara formal, "basis data" mengacu pada sekumpulan data terkait dan cara mengaturnya. Akses ke data ini biasanya disediakan oleh "sistem manajemen basis data" (DBMS) yang terdiri dari satu set perangkat lunak komputer terintegrasi yang memungkinkan pengguna untuk berinteraksi dengan satu atau lebih basis data dan menyediakan akses ke semua data yang terkandung dalam basis data (walaupun pembatasan mungkin ada yang membatasi akses ke data tertentu). DBMS menyediakan berbagai fungsi yang memungkinkan pemasukan, penyimpanan, dan pengambilan informasi dalam jumlah besar dan menyediakan cara untuk mengelola bagaimana informasi itu diatur.

Karena hubungan yang erat di antara mereka, istilah "basis data" sering digunakan dengan santai untuk merujuk pada basis data dan DBMS yang digunakan untuk memanipulasinya.

Di luar dunia teknologi informasi profesional , istilah basis data sering digunakan untuk merujuk pada kumpulan data terkait (seperti spreadsheet atau indeks kartu) karena persyaratan ukuran dan penggunaan biasanya mengharuskan penggunaan sistem manajemen basis data. [1]

DBMS yang ada menyediakan berbagai fungsi yang memungkinkan pengelolaan database dan datanya yang dapat diklasifikasikan ke dalam empat kelompok fungsional utama:

Definisi data – Pembuatan, modifikasi, dan penghapusan definisi yang mendefinisikan organisasi data.
Update – Penyisipan, modifikasi, dan penghapusan data aktual. [2]
Retrieval – Memberikan informasi dalam bentuk yang dapat digunakan secara langsung atau untuk diproses lebih lanjut oleh aplikasi lain. Data yang diambil dapat dibuat tersedia dalam bentuk yang pada dasarnya sama dengan yang disimpan dalam database atau dalam bentuk baru yang diperoleh dengan mengubah atau menggabungkan data yang ada dari database. [3]
Administrasi – Mendaftar dan memantau pengguna, menegakkan keamanan data, memantau kinerja, menjaga integritas data, menangani kontrol konkurensi, dan memulihkan informasi yang telah rusak oleh beberapa peristiwa seperti kegagalan sistem yang tidak terduga. [4]
Baik database dan DBMS-nya sesuai dengan prinsip-prinsip model database tertentu . [5] "Sistem basis data" mengacu secara kolektif ke model basis data, sistem manajemen basis data, dan basis data. [6]

Secara fisik, server database adalah komputer khusus yang menyimpan database aktual dan hanya menjalankan DBMS dan perangkat lunak terkait. Server database biasanya komputer multiprosesor , dengan memori yang besar dan array disk RAID yang digunakan untuk penyimpanan yang stabil. Akselerator basis data perangkat keras, yang terhubung ke satu atau lebih server melalui saluran berkecepatan tinggi, juga digunakan dalam lingkungan pemrosesan transaksi volume besar. DBMS ditemukan di jantung sebagian besar aplikasi database . DBMS dapat dibangun di sekitar kernel multitasking kustom dengan dukungan jaringan built-in , tetapi DBMS modern biasanya mengandalkan sistem operasi standar untuk menyediakan fungsi-fungsi ini.[ rujukan? ]

Karena DBMS terdiri dari pasar yang signifikan , vendor komputer dan penyimpanan sering kali mempertimbangkan persyaratan DBMS dalam rencana pengembangan mereka sendiri. [7]

Basis data dan DBMS dapat dikategorikan menurut model basis data yang didukungnya (seperti relasional atau XML), jenis komputer yang dijalankannya (dari cluster server ke ponsel), bahasa kueri ( s) digunakan untuk mengakses database (seperti SQL atau XQuery ), dan rekayasa internalnya, yang memengaruhi kinerja, skalabilitas , ketahanan, dan keamanan

Sejarah
Ukuran, kemampuan, dan kinerja database dan DBMS masing-masing telah tumbuh dalam urutan besarnya. Peningkatan kinerja ini dimungkinkan oleh kemajuan teknologi di bidang prosesor , memori komputer , penyimpanan komputer , dan jaringan komputer . Konsep database dimungkinkan oleh munculnya media penyimpanan akses langsung seperti disk magnetik, yang menjadi tersedia secara luas pada pertengahan 1960-an; sistem sebelumnya mengandalkan penyimpanan data berurutan pada pita magnetik. Perkembangan selanjutnya dari teknologi database dapat dibagi menjadi tiga era berdasarkan model atau struktur data: navigasi , [8] SQL/ relasional, dan pasca-relasional.

Dua model data navigasi awal utama adalah model hierarkis dan model CODASYL (model jaringan ). Ini ditandai dengan penggunaan pointer (seringkali alamat disk fisik) untuk mengikuti hubungan dari satu record ke record lainnya.

Model relasional , pertama kali diusulkan pada tahun 1970 oleh Edgar F. Codd , berangkat dari tradisi ini dengan bersikeras bahwa aplikasi harus mencari data dengan konten, bukan dengan mengikuti link. Model relasional menggunakan set tabel gaya buku besar, masing-masing digunakan untuk jenis entitas yang berbeda. Hanya pada pertengahan 1980-an perangkat keras komputasi menjadi cukup kuat untuk memungkinkan penyebaran luas sistem relasional (DBMS plus aplikasi). Namun, pada awal 1990-an, sistem relasional mendominasi di semua aplikasi pemrosesan data berskala besar , dan pada 2018 mereka tetap dominan: IBM Db2 , Oracle , MySQL , dan Microsoft SQL Server adalah yang paling banyak dicariDBMS . [9] Bahasa database yang dominan, SQL standar untuk model relasional, telah mempengaruhi bahasa database untuk model data lainnya. [ rujukan? ]

Database objek dikembangkan pada 1980-an untuk mengatasi ketidaknyamanan ketidakcocokan impedansi objek-relasional , yang menyebabkan munculnya istilah "pasca-relasional" dan juga pengembangan database objek-relasional hybrid .

Generasi berikutnya dari database pasca-relasional di akhir tahun 2000-an dikenal sebagai database NoSQL , memperkenalkan penyimpanan nilai kunci yang cepat dan database berorientasi dokumen . Sebuah "generasi berikutnya" yang bersaing yang dikenal sebagai database NewSQL mencoba implementasi baru yang mempertahankan model relasional/SQL sambil bertujuan untuk mencocokkan kinerja tinggi NoSQL dibandingkan dengan DBMS relasional yang tersedia secara komersial.

1960-an, DBMS navigasi
Informasi lebih lanjut: Basis data navigasi

Pengenalan istilah database bertepatan dengan ketersediaan penyimpanan akses langsung (disk dan drum) dari pertengahan 1960-an dan seterusnya. Istilah ini mewakili kontras dengan sistem berbasis kaset di masa lalu, yang memungkinkan penggunaan interaktif bersama daripada pemrosesan batch harian . Oxford English Dictionary mengutip laporan tahun 1962 oleh System Development Corporation of California sebagai yang pertama menggunakan istilah "data-base" dalam pengertian teknis tertentu. [10]

Sebagai komputer tumbuh dalam kecepatan dan kemampuan, sejumlah sistem database tujuan umum muncul; pada pertengahan 1960-an sejumlah sistem seperti itu mulai digunakan secara komersial. Ketertarikan pada standar mulai tumbuh, dan Charles Bachman , penulis salah satu produk tersebut, Integrated Data Store (IDS), mendirikan Grup Tugas Basis Data dalam CODASYL , grup yang bertanggung jawab atas pembuatan dan standarisasi COBOL . Pada tahun 1971, Database Task Group menyampaikan standar mereka, yang umumnya dikenal sebagai pendekatan CODASYL , dan segera sejumlah produk komersial berdasarkan pendekatan ini memasuki pasar.

Pendekatan CODASYL menawarkan aplikasi kemampuan untuk menavigasi di sekitar kumpulan data terkait yang dibentuk menjadi jaringan besar. Aplikasi dapat menemukan catatan dengan salah satu dari tiga metode:

Penggunaan kunci utama (dikenal sebagai kunci CALC, biasanya diimplementasikan dengan hashing )
Menavigasi hubungan (disebut set ) dari satu record ke record lainnya
Memindai semua catatan secara berurutan
Kemudian sistem menambahkan B-tree untuk menyediakan jalur akses alternatif. Banyak basis data CODASYL juga menambahkan bahasa kueri deklaratif untuk pengguna akhir (berbeda dari API navigasi). Namun, database CODASYL sangat kompleks dan membutuhkan pelatihan dan upaya yang signifikan untuk menghasilkan aplikasi yang berguna.

IBM juga memiliki DBMS sendiri pada tahun 1966, yang dikenal sebagai Sistem Manajemen Informasi (IMS). IMS adalah pengembangan perangkat lunak yang ditulis untuk program Apollo pada System/360 . IMS secara umum memiliki konsep yang mirip dengan CODASYL, tetapi menggunakan hierarki yang ketat untuk model navigasi datanya daripada model jaringan CODASYL. Kedua konsep tersebut kemudian dikenal sebagai database navigasi karena cara data diakses: istilah ini dipopulerkan oleh presentasi Penghargaan Turing tahun 1973 oleh Bachman, The Programmer as Navigator . IMS diklasifikasikan oleh IBM sebagai database hierarkis . IDMS dan Cincom Systems ' TOTALdatabase diklasifikasikan sebagai database jaringan. IMS tetap digunakan pada 2014 . [11]

1970-an, DBMS relasional
Edgar F. Codd bekerja di IBM di San Jose, California , di salah satu kantor cabang mereka yang terutama terlibat dalam pengembangan sistem hard disk . Dia tidak senang dengan model navigasi pendekatan CODASYL, terutama kurangnya fasilitas "pencarian". Pada tahun 1970, ia menulis sejumlah makalah yang menguraikan pendekatan baru untuk konstruksi basis data yang akhirnya memuncak dalam terobosan Model Data Relasional untuk Bank Data Bersama Besar . [12]

Dalam makalah ini, ia menjelaskan sistem baru untuk menyimpan dan bekerja dengan database besar. Alih-alih catatan disimpan dalam semacam daftar terkait catatan bentuk bebas seperti di CODASYL, ide Codd adalah untuk mengatur data sebagai sejumlah " tabel ", setiap tabel digunakan untuk jenis entitas yang berbeda. Setiap tabel akan berisi sejumlah kolom tetap yang berisi atribut entitas. Satu atau lebih kolom dari setiap tabel ditetapkan sebagai kunci utama yang dengannya baris tabel dapat diidentifikasi secara unik; referensi silang antar tabel selalu menggunakan kunci utama ini, bukan alamat disk, dan kueri akan bergabung dengan tabel berdasarkan hubungan kunci ini, menggunakan serangkaian operasi berdasarkan sistem matematikakalkulus relasional (dari mana model mengambil namanya). Memisahkan data menjadi satu set tabel (atau relasi ) yang dinormalisasi bertujuan untuk memastikan bahwa setiap "fakta" hanya disimpan satu kali, sehingga menyederhanakan operasi pembaruan. Tabel virtual yang disebut tampilan dapat menyajikan data dengan cara yang berbeda untuk pengguna yang berbeda, tetapi tampilan tidak dapat diperbarui secara langsung.

Codd menggunakan istilah matematika untuk mendefinisikan model: relasi, tupel, dan domain daripada tabel, baris, dan kolom. Terminologi yang sekarang akrab berasal dari implementasi awal. Codd kemudian akan mengkritik kecenderungan implementasi praktis untuk berangkat dari dasar matematika yang model didasarkan.

Penggunaan kunci utama (pengidentifikasi berorientasi pengguna) untuk mewakili hubungan tabel silang, daripada alamat disk, memiliki dua motivasi utama. Dari perspektif teknik, ini memungkinkan tabel untuk dipindahkan dan diubah ukurannya tanpa reorganisasi database yang mahal. Tetapi Codd lebih tertarik pada perbedaan dalam semantik: penggunaan pengidentifikasi eksplisit membuatnya lebih mudah untuk mendefinisikan operasi pembaruan dengan definisi matematika yang bersih, dan itu juga memungkinkan operasi kueri didefinisikan dalam hal disiplin kalkulus predikat orde pertama yang mapan.; karena operasi ini memiliki properti matematika yang bersih, menjadi mungkin untuk menulis ulang kueri dengan cara yang terbukti benar, yang merupakan dasar dari pengoptimalan kueri. Tidak ada kehilangan ekspresi dibandingkan dengan model hierarkis atau jaringan, meskipun koneksi antar tabel tidak lagi eksplisit.

Dalam model hierarki dan jaringan, catatan diizinkan memiliki struktur internal yang kompleks. Misalnya, riwayat gaji seorang karyawan mungkin direpresentasikan sebagai "grup berulang" dalam catatan karyawan. Dalam model relasional, proses normalisasi menyebabkan struktur internal seperti itu digantikan oleh data yang disimpan dalam beberapa tabel, yang hanya dihubungkan oleh kunci logis.

Misalnya, penggunaan umum dari sistem database adalah untuk melacak informasi tentang pengguna, nama mereka, informasi login, berbagai alamat dan nomor telepon. Dalam pendekatan navigasi, semua data ini akan ditempatkan dalam satu catatan panjang variabel. Dalam pendekatan relasional, data akan dinormalisasi menjadi tabel pengguna, tabel alamat dan tabel nomor telepon (misalnya). Catatan akan dibuat dalam tabel opsional ini hanya jika alamat atau nomor telepon benar-benar diberikan.

Selain mengidentifikasi baris/catatan menggunakan pengidentifikasi logis daripada alamat disk, Codd mengubah cara aplikasi mengumpulkan data dari beberapa catatan. Daripada mengharuskan aplikasi untuk mengumpulkan data satu catatan pada satu waktu dengan menavigasi tautan, mereka akan menggunakan bahasa kueri deklaratif yang menyatakan data apa yang diperlukan, daripada jalur akses yang digunakan untuk menemukannya. Menemukan jalur akses yang efisien ke data menjadi tanggung jawab sistem manajemen basis data, bukan pemrogram aplikasi. Proses ini, yang disebut optimasi kueri, bergantung pada fakta bahwa kueri diekspresikan dalam bentuk logika matematika.

Makalah Codd diambil oleh dua orang di Berkeley, Eugene Wong dan Michael Stonebraker . Mereka memulai proyek yang dikenal sebagai INGRES menggunakan dana yang telah dialokasikan untuk proyek basis data geografis dan pemrogram mahasiswa untuk menghasilkan kode. Mulai tahun 1973, INGRES mengirimkan produk uji pertamanya yang umumnya siap digunakan secara luas pada tahun 1979. INGRES mirip dengan Sistem R dalam beberapa hal, termasuk penggunaan "bahasa" untuk akses data , yang dikenal sebagai QUEL . Seiring waktu, INGRES pindah ke standar SQL yang muncul.

IBM sendiri melakukan satu uji implementasi model relasional, PRTV , dan satu produksi, Sistem Bisnis 12 , keduanya sekarang dihentikan. Honeywell menulis MRDS untuk Multics , dan sekarang ada dua implementasi baru: Alphora Dataphor dan Rel . Sebagian besar implementasi DBMS lain yang biasanya disebut relasional sebenarnya adalah DBMS SQL.

Pada tahun 1970, University of Michigan memulai pengembangan Sistem Manajemen Informasi MICRO [13] berdasarkan model Data Teori Set DL Childs . [14] [15] [16] MICRO digunakan untuk mengelola kumpulan data yang sangat besar oleh Departemen Tenaga Kerja AS , Badan Perlindungan Lingkungan AS , dan peneliti dari Universitas Alberta , Universitas Michigan , dan Universitas Negeri Wayne . Itu berjalan di komputer mainframe IBM menggunakan Sistem Terminal Michigan . [17] Sistem ini tetap diproduksi hingga tahun 1998.

Pendekatan terintegrasi
Artikel utama: Mesin database
Pada 1970-an dan 1980-an, upaya dilakukan untuk membangun sistem database dengan perangkat keras dan perangkat lunak yang terintegrasi. Filosofi yang mendasari adalah bahwa integrasi tersebut akan memberikan kinerja yang lebih tinggi dengan biaya yang lebih rendah. Contohnya adalah IBM System/38 , penawaran awal Teradata , dan mesin database Britton Lee, Inc.

Pendekatan lain untuk dukungan perangkat keras untuk manajemen basis data adalah akselerator CAFS ICL , pengontrol disk perangkat keras dengan kemampuan pencarian yang dapat diprogram. Dalam jangka panjang, upaya ini umumnya tidak berhasil karena mesin database khusus tidak dapat mengikuti perkembangan pesat dan kemajuan komputer tujuan umum. Jadi kebanyakan sistem basis data saat ini adalah sistem perangkat lunak yang berjalan pada perangkat keras untuk keperluan umum, menggunakan penyimpanan data komputer untuk keperluan umum. Namun, ide ini masih dikejar dalam aplikasi tertentu oleh beberapa perusahaan seperti Netezza dan Oracle ( Exadata ).

Akhir 1970-an, SQL DBMS
IBM mulai mengerjakan sistem prototipe secara longgar berdasarkan konsep Codd sebagai Sistem R pada awal 1970-an. Versi pertama siap pada tahun 1974/5, dan kemudian mulai bekerja pada sistem multi-tabel di mana data dapat dibagi sehingga semua data untuk catatan (beberapa di antaranya opsional) tidak harus disimpan dalam "potongan" besar tunggal. Versi multi-pengguna berikutnya diuji oleh pelanggan pada tahun 1978 dan 1979, pada saat itu bahasa kueri standar – SQL [ rujukan? ] – telah ditambahkan. Gagasan Codd memantapkan diri sebagai dapat diterapkan dan lebih unggul dari CODASYL, mendorong IBM untuk mengembangkan versi produksi yang sebenarnya dari Sistem R, yang dikenal sebagai SQL/DS , dan, kemudian, Database 2 (IBM Db2 ).

Oracle Database Larry Ellison (atau lebih sederhananya, Oracle ) dimulai dari rantai yang berbeda, berdasarkan makalah IBM tentang System R. Meskipun implementasi Oracle V1 selesai pada tahun 1978, tidak sampai Oracle Versi 2 ketika Ellison mengalahkan IBM ke pasar pada tahun 1979. [18]

Stonebraker melanjutkan untuk menerapkan pelajaran dari INGRES untuk mengembangkan database baru, Postgres, yang sekarang dikenal sebagai PostgreSQL . PostgreSQL sering digunakan untuk aplikasi kritis misi global (pendaftar nama domain .org dan .info menggunakannya sebagai penyimpanan data utama mereka , seperti halnya banyak perusahaan besar dan lembaga keuangan).

Di Swedia, makalah Codd juga dibaca dan Mimer SQL dikembangkan pada pertengahan 1970-an di Universitas Uppsala . Pada tahun 1984, proyek ini dikonsolidasikan menjadi perusahaan independen.

Model data lain, model hubungan entitas , muncul pada tahun 1976 dan mendapatkan popularitas untuk desain database karena menekankan deskripsi yang lebih akrab daripada model relasional sebelumnya. Kemudian, konstruksi entitas-hubungan dipasang sebagai konstruksi pemodelan data untuk model relasional, dan perbedaan antara keduanya menjadi tidak relevan. [ rujukan? ]

1980-an, di desktop
Tahun 1980-an mengantarkan era komputasi desktop . Komputer baru memberdayakan penggunanya dengan spreadsheet seperti Lotus 1-2-3 dan perangkat lunak database seperti dBASE . Produk dBASE ringan dan mudah dipahami oleh pengguna komputer mana pun. C. Wayne Ratliff , pencipta dBASE, menyatakan: "dBASE berbeda dari program seperti BASIC, C, FORTRAN, dan COBOL karena banyak pekerjaan kotor telah dilakukan. Manipulasi data dilakukan oleh dBASE bukan oleh pengguna, sehingga pengguna dapat berkonsentrasi pada apa yang dia lakukan, daripada harus mengacaukan detail kotor membuka, membaca, dan menutup file, dan mengelola alokasi ruang." [19]dBASE adalah salah satu judul perangkat lunak terlaris di tahun 1980-an dan awal 1990-an.

1990-an, berorientasi objek
Tahun 1990-an, seiring dengan peningkatan pemrograman berorientasi objek , melihat pertumbuhan bagaimana data di berbagai database ditangani. Programmer dan desainer mulai memperlakukan data dalam database mereka sebagai objek . Artinya, jika data seseorang ada dalam database, atribut orang tersebut, seperti alamat, nomor telepon, dan usianya, kini dianggap milik orang tersebut alih-alih menjadi data asing. Hal ini memungkinkan hubungan antara data terkait dengan objek dan atributnya dan bukan dengan bidang individual. [20] Istilah " objek-relasional impedansi mismatch " menggambarkan ketidaknyamanan menerjemahkan antara objek diprogram dan tabel database. Database objek dandatabase objek-relasional mencoba memecahkan masalah ini dengan menyediakan bahasa berorientasi objek (kadang-kadang sebagai ekstensi ke SQL) yang dapat digunakan programmer sebagai alternatif untuk SQL relasional murni. Di sisi pemrograman, perpustakaan yang dikenal sebagai pemetaan relasional objek (ORM) mencoba memecahkan masalah yang sama.

2000-an, NoSQL dan NewSQL
Artikel utama: NoSQL dan NewSQL
Database XML adalah jenis database berorientasi dokumen terstruktur yang memungkinkan query berdasarkan atribut dokumen XML . Database XML sebagian besar digunakan dalam aplikasi di mana data mudah dilihat sebagai kumpulan dokumen, dengan struktur yang dapat bervariasi dari yang sangat fleksibel hingga yang sangat kaku: contohnya termasuk artikel ilmiah, paten, pengajuan pajak, dan catatan personalia.

Basis data NoSQL seringkali sangat cepat, tidak memerlukan skema tabel tetap, menghindari operasi gabungan dengan menyimpan data yang didenormalisasi , dan dirancang untuk diskalakan secara horizontal .

Dalam beberapa tahun terakhir, ada permintaan yang kuat untuk basis data terdistribusi secara besar-besaran dengan toleransi partisi yang tinggi, tetapi menurut teorema CAP , tidak mungkin bagi sistem terdistribusi untuk secara bersamaan memberikan jaminan konsistensi , ketersediaan, dan toleransi partisi. Sistem terdistribusi dapat memenuhi dua jaminan ini pada saat yang sama, tetapi tidak ketiganya. Untuk alasan itu, banyak database NoSQL menggunakan apa yang disebut konsistensi akhirnya untuk memberikan jaminan ketersediaan dan toleransi partisi dengan tingkat konsistensi data yang berkurang.

NewSQL adalah kelas database relasional modern yang bertujuan untuk memberikan kinerja terukur yang sama dari sistem NoSQL untuk beban kerja pemrosesan transaksi online (baca-tulis) sambil tetap menggunakan SQL dan mempertahankan jaminan ACID dari sistem database tradisional.

Database digunakan untuk mendukung operasi internal organisasi dan untuk mendukung interaksi online dengan pelanggan dan pemasok (lihat perangkat lunak Perusahaan ).

Basis data digunakan untuk menyimpan informasi administratif dan data yang lebih khusus, seperti data teknik atau model ekonomi. Contohnya termasuk sistem perpustakaan terkomputerisasi, sistem reservasi penerbangan , sistem inventaris suku cadang terkomputerisasi , dan banyak sistem manajemen konten yang menyimpan situs web sebagai kumpulan halaman web dalam database.

Klasifikasi
Salah satu cara untuk mengklasifikasikan database melibatkan jenis isinya, misalnya: bibliografi , dokumen-teks, statistik, atau objek multimedia. Cara lain adalah dengan bidang aplikasi mereka, misalnya: akuntansi, komposisi musik, film, perbankan, manufaktur, atau asuransi. Cara ketiga adalah dengan beberapa aspek teknis, seperti struktur database atau tipe antarmuka. Bagian ini mencantumkan beberapa kata sifat yang digunakan untuk mengkarakterisasi berbagai jenis database.

Basis data dalam memori adalah basis data yang terutama berada di memori utama , tetapi biasanya didukung oleh penyimpanan data komputer yang tidak mudah menguap. Basis data memori utama lebih cepat daripada basis data disk, dan sering digunakan di mana waktu respons sangat penting, seperti pada peralatan jaringan telekomunikasi.
Basis data aktif mencakup arsitektur yang digerakkan oleh peristiwa yang dapat merespons kondisi baik di dalam maupun di luar basis data. Kemungkinan penggunaan termasuk pemantauan keamanan, peringatan, pengumpulan statistik dan otorisasi. Banyak database menyediakan fitur database aktif dalam bentuk pemicu database .
Sebuah database awan bergantung pada teknologi awan . Baik database dan sebagian besar DBMS-nya berada dari jarak jauh, "di awan", sementara aplikasinya dikembangkan oleh pemrogram dan kemudian dipelihara dan digunakan oleh pengguna akhir melalui browser web dan Open API .
Data warehouse mengarsipkan data dari database operasional dan seringkali dari sumber eksternal seperti firma riset pasar. Gudang menjadi sumber pusat data untuk digunakan oleh manajer dan pengguna akhir lainnya yang mungkin tidak memiliki akses ke data operasional. Misalnya, data penjualan mungkin digabungkan ke total mingguan dan dikonversi dari kode produk internal untuk menggunakan UPC sehingga dapat dibandingkan dengan data ACNielsen . Beberapa komponen dasar dan penting dari data warehousing termasuk mengekstraksi, menganalisis, dan menambang data, mengubah, memuat, dan mengelola data sehingga membuatnya tersedia untuk digunakan lebih lanjut.
Database deduktif menggabungkan pemrograman logika dengan database relasional.
Basis data terdistribusi adalah basis data di mana data dan DBMS menjangkau banyak komputer.
Database berorientasi dokumen dirancang untuk menyimpan, mengambil, dan mengelola informasi berorientasi dokumen, atau semi terstruktur. Database berorientasi dokumen adalah salah satu kategori utama database NoSQL.
Sistem basis data tertanam adalah DBMS yang terintegrasi erat dengan perangkat lunak aplikasi yang memerlukan akses ke data yang disimpan sedemikian rupa sehingga DBMS tersembunyi dari pengguna akhir aplikasi dan memerlukan sedikit atau tanpa pemeliharaan berkelanjutan. [21]
Basis data pengguna akhir terdiri dari data yang dikembangkan oleh pengguna akhir individu. Contohnya adalah kumpulan dokumen, spreadsheet, presentasi, multimedia, dan file lainnya. Beberapa produk ada untuk mendukung database tersebut. Beberapa di antaranya jauh lebih sederhana daripada DBMS lengkap, dengan fungsionalitas DBMS yang lebih mendasar.
Sebuah sistem database federasi terdiri dari beberapa database yang berbeda, masing-masing dengan DBMS sendiri. Hal ini ditangani sebagai database tunggal oleh sistem manajemen database federasi (FDBMS), yang secara transparan mengintegrasikan beberapa DBMS otonom, mungkin dari jenis yang berbeda (dalam hal ini juga akan menjadi sistem database heterogen ), dan menyediakan mereka dengan pandangan konseptual yang terintegrasi. .
Kadang-kadang istilah multi-database digunakan sebagai sinonim untuk database federasi, meskipun mungkin merujuk pada kelompok database yang kurang terintegrasi (misalnya, tanpa FDBMS dan skema terintegrasi yang dikelola) yang bekerja sama dalam satu aplikasi. Dalam hal ini, biasanya middleware digunakan untuk distribusi, yang biasanya mencakup protokol commit atom (ACP), misalnya, protokol commit dua fase , untuk memungkinkan transaksi terdistribusi (global) di seluruh database yang berpartisipasi.
Database grafik adalah jenis database NoSQL yang menggunakan struktur grafik dengan node, tepi, dan properti untuk mewakili dan menyimpan informasi. Database grafik umum yang dapat menyimpan grafik apapun berbeda dari database grafik khusus seperti triplestore dan database jaringan .
Array DBMS adalah jenis DBMS NoSQL yang memungkinkan pemodelan, penyimpanan, dan pengambilan (biasanya besar) array multi-dimensi seperti citra satelit dan output simulasi iklim.
Dalam database hypertext atau hypermedia , setiap kata atau potongan teks yang mewakili suatu objek, misalnya, potongan teks lain, artikel, gambar, atau film, dapat di- hyperlink ke objek tersebut. Database hypertext sangat berguna untuk mengatur sejumlah besar informasi yang berbeda. Misalnya, mereka berguna untuk mengatur ensiklopedia online , di mana pengguna dapat dengan mudah melompati teks. Dengan demikian World Wide Web adalah database hypertext terdistribusi besar.
Basis pengetahuan (disingkat KB , kb atau [22] [23] ) adalah jenis basis data khusus untuk manajemen pengetahuan , yang menyediakan sarana untuk pengumpulan, pengorganisasian, dan pengambilan pengetahuan yang terkomputerisasi . Juga kumpulan data yang mewakili masalah dengan solusi mereka dan pengalaman terkait.
Basis data seluler dapat dijalankan atau disinkronkan dari perangkat komputasi seluler.
Database operasional menyimpan data rinci tentang operasi suatu organisasi. Mereka biasanya memproses pembaruan dengan volume yang relatif tinggi menggunakan transaksi . Contohnya termasuk database pelanggan yang mencatat kontak, kredit, dan informasi demografis tentang pelanggan bisnis, database personalia yang menyimpan informasi seperti gaji, tunjangan, data keterampilan tentang karyawan, sistem perencanaan sumber daya perusahaan yang mencatat rincian tentang komponen produk, persediaan suku cadang, dan keuangan. database yang melacak uang organisasi, akuntansi dan transaksi keuangan.
Basis data paralel berupaya meningkatkan kinerja melalui paralelisasi untuk tugas-tugas seperti memuat data, membangun indeks, dan mengevaluasi kueri.
Arsitektur DBMS paralel utama yang diinduksi oleh arsitektur perangkat keras yang mendasarinya adalah:
Arsitektur memori bersama , di mana beberapa prosesor berbagi ruang memori utama, serta penyimpanan data lainnya.
Arsitektur disk bersama , di mana setiap unit pemrosesan (biasanya terdiri dari beberapa prosesor) memiliki memori utamanya sendiri, tetapi semua unit berbagi penyimpanan lainnya.
Arsitektur shared-nothing , di mana setiap unit pemrosesan memiliki memori utama dan penyimpanan lainnya.
Database probabilistik menggunakan logika fuzzy untuk menarik kesimpulan dari data yang tidak tepat.
Basis data waktu nyata memproses transaksi dengan cukup cepat agar hasilnya kembali dan segera ditindaklanjuti.
Basis data spasial dapat menyimpan data dengan fitur multidimensi. Kueri pada data tersebut mencakup kueri berbasis lokasi, seperti "Di mana hotel terdekat di wilayah saya?".
Basis data temporal memiliki aspek waktu bawaan, misalnya model data temporal dan versi temporal SQL . Lebih khusus lagi, aspek temporal biasanya mencakup waktu valid dan waktu transaksi.
Database berorientasi terminologi dibangun di atas database berorientasi objek , sering disesuaikan untuk bidang tertentu.
Basis data data tidak terstruktur dimaksudkan untuk menyimpan beragam objek dengan cara yang dapat dikelola dan dilindungi yang tidak cocok secara alami dan nyaman dalam basis data umum. Ini mungkin termasuk pesan email, dokumen, jurnal, objek multimedia, dll. Nama mungkin menyesatkan karena beberapa objek bisa sangat terstruktur. Namun, seluruh koleksi objek yang mungkin tidak sesuai dengan kerangka kerja terstruktur yang telah ditentukan sebelumnya. Sebagian besar DBMS yang sudah mapan sekarang mendukung data tidak terstruktur dalam berbagai cara, dan DBMS baru yang berdedikasi sedang bermunculan.